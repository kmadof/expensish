# Docker image
# Build a Docker image to deploy, run, or push to a container registry.
# Add steps that use Docker Compose, tag images, push to a registry, run an image, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
- master

pool:
  vmImage: 'Ubuntu-16.04'

variables:
  buildConfiguration: 'Release'
  imageName: 'expensish-api:$(build.buildId)'

steps:

- script: dotnet build --configuration $(buildConfiguration) expensish-api/Expensish-api.sln
  displayName: 'dotnet build $(buildConfiguration)'
- script: |
    mkdir $(Build.SourcesDirectory)/results
    dotnet test --logger trx /p:CollectCoverage=true /p:CoverletOutputFormat=cobertura  expensish-api/Expensish.Api.Tests /p:Exclude=\"[xunit.*]*,[*]Coverlet.Core*\"
    dotnet test --logger trx /p:CollectCoverage=true /p:CoverletOutputFormat=cobertura /p:MergeWtih=$(Build.SourcesDirectory)/expensish-api/Expensish.Api.Tests/coverage.cobertura.xml expensish-api/Expensish.Api.Tests /p:Exclude=\"[xunit.*]*,[*]Coverlet.Core*\"
    copy $(Build.SourcesDirectory)/expensish-api/Expensish.Api.Tests/coverage.cobertura.xml $(Build.SourcesDirectory)/results  
    dotnet tool install dotnet-reportgenerator-globaltool --tool-path . --version 4.0.0-rc4
    ./reportgenerator "-reports:$(Build.SourcesDirectory)/expensish-api/Expensish.Api.Tests/coverage.cobertura.xml" "-targetdir:results" "-reporttypes:HTMLInline;HTMLChart" "-assemblyfilters:-xunit*"
  displayName: 'Unit testing'
- task: PublishTestResults@2
  inputs:
    testRunner: VSTest
    testResultsFiles: '**/*.trx'
- task: PublishCodeCoverageResults@1
  inputs:
    summaryFileLocation: $(Build.SourcesDirectory)/expensish-api/Expensish.Api.Tests/coverage.cobertura.xml
    reportDirectory: $(Build.SourcesDirectory)/results
    codecoverageTool: cobertura

- script: |
    # dotnet build --configuration $(buildConfiguration) expensish-api/Expensish-api.sln
    # dotnet test expensish-api/Expensish.Api.Tests --configuration $(buildConfiguration) --logger trx
    dotnet publish expensish-api --configuration $(buildConfiguration) --output out
    docker build -f docker/azure/expensish-api/Dockerfile -t $(dockerId)/$(imageName) .
    docker login -u $(dockerId) -p $pswd
    docker push $(dockerId)/$(imageName)
  displayName: 'Create docker image for Expensish.Api'
  condition: failed()
  env:
    pswd: $(dockerPassword)


